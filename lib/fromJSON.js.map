{"version":3,"sources":["fromJSON.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,qBAAhC,EAAuD,2BAAvD,EAAoF,0BAApF,EAAgH,uBAAhH,EAAyI,uBAAzI,EAAkK,yBAAlK,CAAP,EAAqM,OAArM,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,QAAI,OAAO,QAAQ,OAAR,CAAP,CAFuB;AAG3B,QAAI,cAAc,QAAQ,qBAAR,CAAd,CAHuB;AAI3B,QAAI,oBAAoB,QAAQ,2BAAR,CAApB,CAJuB;AAK3B,QAAI,mBAAmB,QAAQ,0BAAR,CAAnB,CALuB;AAM3B,QAAI,gBAAgB,QAAQ,uBAAR,CAAhB,CANuB;AAO3B,QAAI,gBAAgB,QAAQ,uBAAR,CAAhB,CAPuB;AAQ3B,QAAI,kBAAkB,QAAQ,yBAAR,CAAlB,CARuB;AAS3B,aAAS,QAAT,CAAkB,CAAlB,EAAqB;AACjB,gBAAQ,EAAE,IAAF;AACJ,iBAAK,SAAL;AACI,uBAAO,cAAc,OAAd,CAAsB,CAAtB,CAAP,CADJ;AADJ,iBAGS,oBAAL;AACI,uBAAO,kBAAkB,sBAAlB,CAAyC,CAAzC,CAAP,CADJ;AAHJ,iBAKS,YAAL;AACI,uBAAO,gBAAgB,cAAhB,CAA+B,CAA/B,CAAP,CADJ;AALJ,iBAOS,oBAAL;AACI,uBAAO,cAAc,sBAAd,CAAqC,CAArC,CAAP,CADJ;AAPJ,iBASS,kBAAL;AACI,uBAAO,YAAY,oBAAZ,CAAiC,CAAjC,CAAP,CADJ;AATJ,iBAWS,WAAL;AACI,uBAAO,YAAY,aAAZ,CAA0B,CAA1B,CAAP,CADJ;AAXJ,iBAaS,iBAAL;AACI,uBAAO,cAAc,mBAAd,CAAkC,CAAlC,CAAP,CADJ;AAbJ,iBAeS,eAAL;AACI,uBAAO,iBAAiB,iBAAjB,CAAmC,CAAnC,CAAP,CADJ;AAfJ,iBAiBS,OAAL;AACI,uBAAO,YAAY,SAAZ,CAAsB,CAAtB,CAAP,CADJ;AAjBJ;AAoBQ,oBAAI,MAAM,cAAc,aAAd,CAA4B,CAA5B,CAAN,CADR;AAEI,oBAAI,KAAK,OAAL,CAAa,GAAb,CAAJ,EACI,OAAO,GAAP,CADJ;AAEA,sBAAM,cAAc,6BAAd,CAA4C,CAA5C,CAAN,CAJJ;AAKI,oBAAI,KAAK,OAAL,CAAa,GAAb,CAAJ,EACI,OAAO,GAAP,CADJ;AAEA,sBAAM,cAAc,uBAAd,CAAsC,CAAtC,CAAN,CAPJ;AAQI,oBAAI,KAAK,OAAL,CAAa,GAAb,CAAJ,EACI,OAAO,GAAP,CADJ;AAEA,sBAAM,iBAAiB,gBAAjB,CAAkC,CAAlC,CAAN,CAVJ;AAWI,oBAAI,KAAK,OAAL,CAAa,GAAb,CAAJ,EACI,OAAO,GAAP,CADJ;AAEA,uBAAO,gBAAgB,OAAhB,CAAwB,CAAxB,CAAP,CAbJ;AAnBJ,SADiB;KAArB;AAoCA,WAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAP,EAA/C,EA7C2B;AA8C3B,YAAQ,OAAR,GAAkB,QAAlB,CA9C2B;CAA5B,CAPH","file":"fromJSON.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', './private/fromClass', './private/fromDeclaration', './private/fromExpression', './private/fromPattern', './private/fromProgram', './private/fromStatement'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Op_1 = require('op/Op');\n    var fromClass_1 = require('./private/fromClass');\n    var fromDeclaration_1 = require('./private/fromDeclaration');\n    var fromExpression_1 = require('./private/fromExpression');\n    var fromPattern_1 = require('./private/fromPattern');\n    var fromProgram_1 = require('./private/fromProgram');\n    var fromStatement_1 = require('./private/fromStatement');\n    function fromJson(_) {\n        switch (_.type) {\n            case 'Program':\n                return fromProgram_1.default(_);\n            case 'VariableDeclarator':\n                return fromDeclaration_1.fromVariableDeclarator(_);\n            case 'SwitchCase':\n                return fromStatement_1.fromSwitchCase(_);\n            case 'AssignmentProperty':\n                return fromPattern_1.fromAssignmentProperty(_);\n            case 'MethodDefinition':\n                return fromClass_1.fromMethodDefinition(_);\n            case 'ClassBody':\n                return fromClass_1.fromClassBody(_);\n            case 'ExportSpecifier':\n                return fromProgram_1.fromExportSpecifier(_);\n            case 'SpreadElement':\n                return fromExpression_1.fromSpreadElement(_);\n            case 'Super':\n                return fromClass_1.fromSuper(_);\n            default:\n                let ast = fromPattern_1.opFromPattern(_);\n                if (Op_1.nonNull(ast))\n                    return ast;\n                ast = fromProgram_1.opFromImportSpecifierAbstract(_);\n                if (Op_1.nonNull(ast))\n                    return ast;\n                ast = fromProgram_1.opFromModuleDeclaration(_);\n                if (Op_1.nonNull(ast))\n                    return ast;\n                ast = fromExpression_1.opFromExpression(_);\n                if (Op_1.nonNull(ast))\n                    return ast;\n                return fromStatement_1.default(_);\n        }\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = fromJson;\n});\n"],"sourceRoot":"/source/"}