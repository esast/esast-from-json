{"version":3,"sources":["private/fromDeclaration.js"],"names":[],"mappings":"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","file":"private/fromDeclaration.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Declaration', 'op/Op', './fromClass', './fromExpression', './fromFunction', './fromPattern', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Declaration_1 = require('esast/lib/Declaration');\n    var Op_1 = require('op/Op');\n    var fromClass_1 = require('./fromClass');\n    var fromExpression_1 = require('./fromExpression');\n    var fromFunction_1 = require('./fromFunction');\n    var fromPattern_1 = require('./fromPattern');\n    var util_1 = require('./util');\n    function fromDeclaration(_) {\n        return Op_1.orThrow(opFromDeclaration(_), () => util_1.badType(_, 'Declaration'));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = fromDeclaration;\n    function opFromDeclaration(_) {\n        switch (_.type) {\n            case 'ClassDeclaration':\n                return fromClass_1.fromClassDeclaration(_);\n            case 'FunctionDeclaration':\n                return fromFunction_1.fromFunctionDeclaration(_);\n            case 'VariableDeclaration':\n                return fromVariableDeclaration(_);\n            default:\n                return null;\n        }\n    }\n    exports.opFromDeclaration = opFromDeclaration;\n    function fromVariableDeclaration(_) {\n        const ctr = (() => {\n            switch (_.kind) {\n                case 'const':\n                    return Declaration_1.VariableDeclarationConst;\n                case 'let':\n                    return Declaration_1.VariableDeclarationLet;\n                case 'var':\n                    return Declaration_1.VariableDeclarationVar;\n                default:\n                    throw util_1.badValue(_, 'kind', '\"const\" | \"let\" | \"var\"');\n            }\n        })();\n        return util_1.loc(_, new ctr(_.declarations.map(fromVariableDeclarator)));\n    }\n    exports.fromVariableDeclaration = fromVariableDeclaration;\n    function fromVariableDeclarator(_) {\n        return util_1.loc(_, new Declaration_1.VariableDeclarator(fromPattern_1.default(_.id), Op_1.opMap(_.init, fromExpression_1.default)));\n    }\n    exports.fromVariableDeclarator = fromVariableDeclarator;\n});\n"],"sourceRoot":"/source/"}