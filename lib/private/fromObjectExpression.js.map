{"version":3,"sources":["private/fromObjectExpression.js"],"names":[],"mappings":"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","file":"private/fromObjectExpression.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/ObjectExpression', './fromExpression', './fromFunction', './fromIdentifier', './fromLiteral', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var ObjectExpression_1 = require('esast/lib/ObjectExpression');\n    var fromExpression_1 = require('./fromExpression');\n    var fromFunction_1 = require('./fromFunction');\n    var fromIdentifier_1 = require('./fromIdentifier');\n    var fromLiteral_1 = require('./fromLiteral');\n    var util_1 = require('./util');\n    function fromObjectExpression(_) {\n        return util_1.loc(_, new ObjectExpression_1.default(_.properties.map(fromProperty)));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = fromObjectExpression;\n    function fromProperty(_) {\n        return util_1.loc(_, (() => {\n            const name = fromPropertyName(_.key, _.computed);\n            const valueFunction = () => fromFunction_1.fromFunctionExpression(_.value);\n            switch (_.kind) {\n                case 'init':\n                    return _.method ?\n                        new ObjectExpression_1.PropertyMethod(name, valueFunction()) :\n                        new ObjectExpression_1.PropertyPlain(name, fromExpression_1.default(_.value));\n                case 'get':\n                    return new ObjectExpression_1.PropertyGet(name, valueFunction());\n                case 'set':\n                    return new ObjectExpression_1.PropertySet(name, valueFunction());\n                default:\n                    throw util_1.badValue(_, 'sourceType', '\"init\" | \"get\" | \"set\"');\n            }\n        })());\n    }\n    exports.fromProperty = fromProperty;\n    function fromPropertyName(_, computed) {\n        if (computed)\n            return new ObjectExpression_1.ComputedName(fromExpression_1.default(_));\n        else\n            switch (_.type) {\n                case 'Identifier':\n                    return fromIdentifier_1.default(_);\n                case 'Literal':\n                    return fromLiteral_1.fromLiteralNumberOrString(_);\n                default:\n                    throw util_1.badType(_, 'Identifier | Literal');\n            }\n    }\n    exports.fromPropertyName = fromPropertyName;\n});\n"],"sourceRoot":"/source/"}