{"version":3,"sources":["private/fromLiteral.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,mBAAvB,EAA4C,QAA5C,CAAP,EAA8D,OAA9D,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,QAAI,YAAY,QAAQ,mBAAR,CAAZ,CAFuB;AAG3B,QAAI,SAAS,QAAQ,QAAR,CAAT,CAHuB;AAI3B,aAAS,WAAT,CAAqB,CAArB,EAAwB;cACZ,QAAU,EAAV,MADY;;AAEpB,eAAO,OAAO,GAAP,CAAW,CAAX,EAAc,CAAC,MAAM;AACxB,oBAAQ,OAAO,KAAP;AACJ,qBAAK,SAAL;AACI,2BAAO,IAAI,UAAU,cAAV,CAAyB,KAA7B,CAAP,CADJ;AADJ,qBAGS,QAAL;AACI,2BAAO,IAAI,UAAU,aAAV,CAAwB,KAA5B,CAAP,CADJ;AAHJ,qBAKS,QAAL;AACI,2BAAO,UAAU,IAAV,GAAiB,IAAI,UAAU,WAAV,EAArB,GAA+C,IAAI,UAAU,aAAV,CAAwB,WAAW,KAAX,CAA5B,CAA/C,CADX;AALJ,qBAOS,QAAL;AACI,2BAAO,IAAI,UAAU,aAAV,CAAwB,KAA5B,CAAP,CADJ;AAPJ;AAUQ,0BAAM,OAAO,QAAP,CAAgB,CAAhB,EAAmB,OAAnB,EAA4B,oDAA5B,CAAN,CADJ;AATJ,aADwB;SAAN,CAAD,EAAd,CAAP,CAFoB;KAAxB;AAiBA,WAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAP,EAA/C,EArB2B;AAsB3B,YAAQ,OAAR,GAAkB,WAAlB,CAtB2B;AAuB3B,aAAS,UAAT,CAAoB,CAApB,EAAuB;AACnB,YAAI,aAAa,MAAb,EACA,OAAO,CAAP,CADJ,KAEK,IAAI,aAAa,CAAb,IAAkB,WAAW,CAAX,EACvB,OAAO,IAAI,MAAJ,CAAW,EAAE,OAAF,EAAW,EAAE,KAAF,CAA7B,CADC,KAGD,MAAM,OAAO,OAAP,CAAe,CAAf,EAAkB,4BAAlB,CAAN,CAHC;KAHT;AAQA,aAAS,yBAAT,CAAmC,CAAnC,EAAsC;cAC1B,QAAU,EAAV,MAD0B;;AAElC,eAAO,OAAO,GAAP,CAAW,CAAX,EAAc,CAAC,MAAM;AACxB,oBAAQ,OAAO,KAAP;AACJ,qBAAK,QAAL;AACI,2BAAO,IAAI,UAAU,aAAV,CAAwB,KAA5B,CAAP,CADJ;AADJ,qBAGS,QAAL;AACI,2BAAO,IAAI,UAAU,aAAV,CAAwB,KAA5B,CAAP,CADJ;AAHJ;AAMQ,0BAAM,OAAO,QAAP,CAAgB,CAAhB,EAAmB,OAAnB,EAA4B,iBAA5B,CAAN,CADJ;AALJ,aADwB;SAAN,CAAD,EAAd,CAAP,CAFkC;KAAtC;AAaA,YAAQ,yBAAR,GAAoC,yBAApC,CA5C2B;AA6C3B,aAAS,iBAAT,CAA2B,CAA3B,EAA8B;AAC1B,YAAI,EAAE,IAAF,KAAW,SAAX,EACA,MAAM,OAAO,OAAP,CAAe,CAAf,EAAkB,eAAlB,CAAN,CADJ;AAEA,YAAI,OAAO,EAAE,KAAF,KAAY,QAAnB,EACA,MAAM,OAAO,QAAP,CAAgB,CAAhB,EAAmB,OAAnB,EAA4B,QAA5B,CAAN,CADJ;AAEA,eAAO,OAAO,GAAP,CAAW,CAAX,EAAc,IAAI,UAAU,aAAV,CAAwB,EAAE,KAAF,CAA1C,CAAP,CAL0B;KAA9B;AAOA,YAAQ,iBAAR,GAA4B,iBAA5B,CApD2B;CAA5B,CAPH","file":"private/fromLiteral.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Literal', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Literal_1 = require('esast/lib/Literal');\n    var util_1 = require('./util');\n    function fromLiteral(_) {\n        const { value } = _;\n        return util_1.loc(_, (() => {\n            switch (typeof value) {\n                case 'boolean':\n                    return new Literal_1.LiteralBoolean(value);\n                case 'number':\n                    return new Literal_1.LiteralNumber(value);\n                case 'object':\n                    return value === null ? new Literal_1.LiteralNull() : new Literal_1.LiteralRegExp(fromRegExp(value));\n                case 'string':\n                    return new Literal_1.LiteralString(value);\n                default:\n                    throw util_1.badValue(_, 'value', 'boolean | null | number | object | RegExp | string');\n            }\n        })());\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = fromLiteral;\n    function fromRegExp(_) {\n        if (_ instanceof RegExp)\n            return _;\n        else if ('pattern' in _ && 'flags' in _)\n            return new RegExp(_.pattern, _.flags);\n        else\n            throw util_1.badType(_, 'RegExp or {pattern, flags}');\n    }\n    function fromLiteralNumberOrString(_) {\n        const { value } = _;\n        return util_1.loc(_, (() => {\n            switch (typeof value) {\n                case 'number':\n                    return new Literal_1.LiteralNumber(value);\n                case 'string':\n                    return new Literal_1.LiteralString(value);\n                default:\n                    throw util_1.badValue(_, 'value', 'number | string');\n            }\n        })());\n    }\n    exports.fromLiteralNumberOrString = fromLiteralNumberOrString;\n    function fromLiteralString(_) {\n        if (_.type !== 'Literal')\n            throw util_1.badType(_, 'LiteralString');\n        if (typeof _.value !== 'string')\n            throw util_1.badValue(_, 'value', 'string');\n        return util_1.loc(_, new Literal_1.LiteralString(_.value));\n    }\n    exports.fromLiteralString = fromLiteralString;\n});\n"],"sourceRoot":"/source/"}